version: '2'

# Fill in the following environment variables in a .env file
# DRONE_GITHUB_CLIENT_ID - Github OAuth ID
# DRONE_GITHUB_CLIENT_SECRET - Github OAuth secret
# DRONE_GITHUB_TOKEN - Github API Token used for determining group membership
# DRONE_GITHUB_ORG - Github org that can access drone
# DRONE_GITHUB_TEAM - Github team in the org that should be admins
# DRONE_SECRET - Secret used for authing between drone calls
# NGROK_AUTH - ngrok API token for subdomain binding
# NGROK_SUBDOMAIN - ngrok subdomain to bind

services:
  drone-server:
    image: drone/drone:1.7.0
    restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_GITHUB=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_RPC_SECRET=${DRONE_SECRET}
      - DRONE_ADMISSION_PLUGIN_SECRET=${DRONE_SECRET}
      - DRONE_ADMISSION_PLUGIN_ENDPOINT=http://drone-plugin:3000/admit
      - DRONE_CONVERSION_PLUGIN_SECRET=${DRONE_SECRET}
      - DRONE_CONVERSION_PLUGIN_ENDPOINT=http://drone-plugin:3000/convert
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      - DRONE_SERVER_HOST=${NGROK_SUBDOMAIN}.ngrok.io
      - DRONE_SERVER_PROTO=http
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}

  drone-plugin:
    build: .
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_DEBUG=true
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_GITHUB_TOKEN=${DRONE_GITHUB_TOKEN}
      - DRONE_GITHUB_ORG=${DRONE_GITHUB_ORG}
      - DRONE_GITHUB_TEAM=${DRONE_GITHUB_TEAM}

  drone-runner:
    image: drone/drone-runner-docker:1
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_SECRET=${DRONE_SECRET}
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone-server
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=drone-runner

  postgres:
    image: postgres:12.2-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres

  ngrok:
    image: wernight/ngrok
    restart: always
    command: ngrok http -authtoken ${NGROK_AUTH} -subdomain=${NGROK_SUBDOMAIN} drone-server:80
