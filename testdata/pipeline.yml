kind: pipeline
type: docker
name: frontend

cache:
  - hash: client/package-lock.json
    path: client/node_modules

steps:
  - name: Test Frontend
    image: node:13.8.0-alpine
    commands:
      - npm --prefix client install
      - npm --prefix client run lint
      - npm --prefix client test

trigger:
  paths:
    include:
      - 'client/**/*.js'
      - 'client/**/*.ts'
      - 'client/**/*.jsx'
      - 'client/**/*.tsx'
      - 'client/package.json'
      - 'client/package-lock.json'
  branch:
    - master
    - production

---
kind: pipeline
type: docker
name: backend

cache:
  - hash: go.sum
    path: .gocache

steps:
  - name: postgres
    image: postgres:11.2-alpine
    detach: true
    environment:
      POSTGRES_DB: test
  - name: Test Backend
    image: gracepoint/buffalo:0.15.5-1
    commands:
      - /bin/wait-for postgres:5432 -- echo "postgres ready"
      - buffalo test -v ./...
    environment:
      GOCACHE: /drone/src/.gocache
      TEST_DATABASE_URL: 'postgres://postgres:postgres@postgres:5432/test?sslmode=disable'

trigger:
  paths:
    include:
      - '**/*.go'
      - 'go.sum'
      - 'go.sum'
  branch:
    - master
    - production

---
kind: pipeline
name: deploy

deploy:
  repo: tribe
  registry: 073c644574500.dkr.ecr.us-east-1.amazonaws.com
  terraform: gracepoint/terraform:0.0.4

depends_on:
  - backend
  - frontend

trigger:
  branch:
    - production
  event:
    - push
