name: deploy
kind: pipeline
steps:
  - commands:
      - decrypt terraform.tfvars.encrypted > terraform.tfvars
      - terraform init
      - terraform apply -auto-approve -target aws_ecr_repository.repo -var image=073c644574500.dkr.ecr.us-east-1.amazonaws.com/tribe:$DRONE_COMMIT
    environment:
        AWS_ACCESS_KEY_ID:
            from_secret: deploy_access_key
        AWS_SECRET_ACCESS_KEY:
            from_secret: deploy_secret_key
    image: gracepoint/terraform:0.0.4
    name: initialize terraform and ecr
  - image: andrewstucki/plugin-drone-ecr:1
    name: publish
    settings:
        access_key:
            from_secret: deploy_access_key
        auto_tag: true
        repo: tribe
        secret_key:
            from_secret: deploy_secret_key
    volumes:
      - name: docker
        path: /var/run/docker.sock
  - commands:
      - terraform apply -auto-approve -var image=073c644574500.dkr.ecr.us-east-1.amazonaws.com/tribe:$DRONE_COMMIT
      - wait-for-ecs `terraform output cluster` 073c644574500.dkr.ecr.us-east-1.amazonaws.com/tribe:$DRONE_COMMIT
    environment:
        AWS_ACCESS_KEY_ID:
            from_secret: deploy_access_key
        AWS_SECRET_ACCESS_KEY:
            from_secret: deploy_secret_key
    image: gracepoint/terraform:0.0.4
    name: deploy
volumes:
  - host:
        path: /var/run/docker.sock
    name: docker
depends_on:
  - backend
  - frontend
trigger:
    branch:
      - production
    event:
      - push
---
name: deploy_access_key
kind: secret
get:
    name: deploy-access-key
    path: drone
---
name: deploy_secret_key
kind: secret
get:
    name: deploy-secret-key
    path: drone
